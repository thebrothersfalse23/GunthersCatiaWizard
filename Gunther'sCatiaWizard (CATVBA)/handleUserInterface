

' ============================================================================ 
' Gunther's Catia Wizard - UserForm UI Logic
' -----------------------------------------------------------------------------
' This module dynamically creates a MultiPage wizard interface for the UserForm.
' It demonstrates how to add pages and controls at runtime, and provides a 
' navigation system (Next/Back) for moving between wizard steps.
' 
' HOW TO EXPAND:
' - To add more wizard steps, add more pages to the MultiPage control.
' - To add more controls to a page, use the Controls.Add method on the page.
' - To add logic for new controls, declare them as module-level variables if you
'   need to access them outside initialization.
' - Navigation logic is handled by btnNext_Click and btnBack_Click.
' - All controls are created at runtime for maximum flexibility.
' - All page visibility is managed manually for a true wizard experience.
'
' NOTE: This code must be placed in a UserForm module (e.g., UserForm1).
' ============================================================================



' -----------------------------------------------------------------------------
' Module-level Control Declarations
' These variables hold references to controls that need to be accessed
' outside of initialization (e.g., for event handling or dynamic updates).
' -----------------------------------------------------------------------------
Private lblWelcome As MSForms.Label ' Label displayed on the Welcome page
Private btnLaunch As MSForms.CommandButton ' Button to trigger the main wizard action (Welcome page)
Private multiPage As MSForms.MultiPage ' The main MultiPage wizard control containing all steps/pages
Private pageWelcome As MSForms.Page ' Reference to the Welcome page (Page 0) for easy access
Private btnNext As MSForms.CommandButton ' Button to navigate to the next wizard page
Private btnBack As MSForms.CommandButton ' Button to navigate to the previous wizard page



' -----------------------------------------------------------------------------
' UserForm_Initialize: Entry point for UserForm setup
' Dynamically creates the MultiPage wizard, all pages, and all controls.
' Also sets up navigation and initial visibility.
' -----------------------------------------------------------------------------
Private Sub UserForm_Initialize()
    ' === 1. Create the MultiPage wizard control ===
    ' This control holds all wizard steps as separate pages.
    Set multiPage = Me.Controls.Add("Forms.MultiPage.1", "multiPage", True)
    With multiPage
        .Left = 12 ' Distance from left edge of UserForm
        .Top = 12  ' Distance from top edge of UserForm
        .Width = 300 ' Width of the wizard area
        .Height = 180 ' Height of the wizard area
        ' Add three pages (add more here for more steps)
        .Pages.Add
        .Pages.Add
        .Pages.Add
        .Pages(0).Caption = "Welcome" ' Main welcome/intro page
        .Pages(1).Caption = "Tool Design"   ' Tool Design page (shows all control types)
        .Pages(2).Caption = "Page 3"   ' Placeholder for next step
    End With

    ' === 2. Populate the Tool Design page with examples of all control types ===
    ' This demonstrates how to add controls at runtime to a MultiPage page.
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)

    ' --- Add a Frame to the Tool Design page to enable scrolling ---
    Dim frmScroll As MSForms.Frame
    Set frmScroll = pageToolDesign.Controls.Add("Forms.Frame.1", "frmScroll", True)
    With frmScroll
        .Caption = ""
        .Left = 0
        .Top = 0
        .Width = pageToolDesign.Width - 10
        .Height = pageToolDesign.Height - 10
        .ScrollBars = fmScrollBarsVertical
        .KeepScrollBarsVisible = fmScrollBarsVisibleAlways
        .SpecialEffect = fmSpecialEffectFlat
    End With

    ' --- Arrange all controls in a single vertical line inside the Frame ---
    Dim ctrlTop As Integer
    ctrlTop = 12

    ' Example Label (static text)
    Dim lblExample As MSForms.Label
    Set lblExample = frmScroll.Controls.Add("Forms.Label.1", "lblExample", True)
    With lblExample
        .Caption = "Example Label: Tool Name"
        .Left = 20
        .Top = ctrlTop
        .Width = 200
    End With
    ctrlTop = ctrlTop + lblExample.Height + 12

    ' Example TextBox (user input)
    Dim txtExample As MSForms.TextBox
    Set txtExample = frmScroll.Controls.Add("Forms.TextBox.1", "txtExample", True)
    With txtExample
        .Left = 20
        .Top = ctrlTop
        .Width = 200
    End With
    ctrlTop = ctrlTop + txtExample.Height + 12

    ' Example ComboBox (dropdown selection)
    Dim cmbExample As MSForms.ComboBox
    Set cmbExample = frmScroll.Controls.Add("Forms.ComboBox.1", "cmbExample", True)
    With cmbExample
        .Left = 20
        .Top = ctrlTop
        .Width = 200
        .AddItem "Option 1"
        .AddItem "Option 2"
        .AddItem "Option 3"
    End With
    ctrlTop = ctrlTop + cmbExample.Height + 12

    ' Example CheckBox (boolean selection)
    Dim chkExample As MSForms.CheckBox
    Set chkExample = frmScroll.Controls.Add("Forms.CheckBox.1", "chkExample", True)
    With chkExample
        .Caption = "Example CheckBox"
        .Left = 20
        .Top = ctrlTop
    End With
    ctrlTop = ctrlTop + chkExample.Height + 12

    ' Example OptionButton (Radio Button, for mutually exclusive choices)
    Dim optExample1 As MSForms.OptionButton
    Dim optExample2 As MSForms.OptionButton
    Set optExample1 = frmScroll.Controls.Add("Forms.OptionButton.1", "optExample1", True)
    Set optExample2 = frmScroll.Controls.Add("Forms.OptionButton.1", "optExample2", True)
    With optExample1
        .Caption = "Option 1"
        .Left = 20
        .Top = ctrlTop
    End With
    ctrlTop = ctrlTop + optExample1.Height + 4
    With optExample2
        .Caption = "Option 2"
        .Left = 20
        .Top = ctrlTop
    End With
    ctrlTop = ctrlTop + optExample2.Height + 12

    ' Example ListBox (list selection)
    Dim lstExample As MSForms.ListBox
    Set lstExample = frmScroll.Controls.Add("Forms.ListBox.1", "lstExample", True)
    With lstExample
        .Left = 20
        .Top = ctrlTop
        .Width = 200
        .Height = 50
        .AddItem "List Item 1"
        .AddItem "List Item 2"
        .AddItem "List Item 3"
    End With
    ctrlTop = ctrlTop + lstExample.Height + 12

    ' Example CommandButton (action button)
    Dim btnExample As MSForms.CommandButton
    Set btnExample = frmScroll.Controls.Add("Forms.CommandButton.1", "btnExample", True)
    With btnExample
        .Caption = "Example Button"
        .Left = 20
        .Top = ctrlTop
        .Width = 120
    End With
    ctrlTop = ctrlTop + btnExample.Height + 12

    ' Add Run button to the bottom of the Tool Design page (inside the scrollable frame)
    Dim btnRunToolDesign As MSForms.CommandButton
    Set btnRunToolDesign = frmScroll.Controls.Add("Forms.CommandButton.1", "btnRunToolDesign", True)
    With btnRunToolDesign
        .Caption = "Run"
        .Left = 20
        .Top = ctrlTop
        .Width = 120
    End With
    ctrlTop = ctrlTop + btnRunToolDesign.Height + 12

    ' === 3. Reference to Welcome page (Page 0) for later use ===
    Set pageWelcome = multiPage.Pages(0)

    ' === 4. Hide all pages except the Welcome page at startup ===
    ' This ensures the wizard always starts on the first step.
    Dim i As Integer
    For i = 0 To multiPage.Pages.Count - 1
        multiPage.Pages(i).Visible = False
    Next i
    multiPage.Pages(0).Visible = True
    multiPage.Value = 0

    ' === 5. Add Welcome Label to Welcome page ===
    Set lblWelcome = pageWelcome.Controls.Add("Forms.Label.1", "lblWelcome", True)
    With lblWelcome
        .Caption = "Welcome to Gunther's Catia Wizard!"
        .Width = 200
        .Height = 18
        .Left = (multiPage.Width - .Width) / 2
        .Top = 30
    End With

    ' === 6. Add Launch Button to Welcome page ===
    Set btnLaunch = pageWelcome.Controls.Add("Forms.CommandButton.1", "btnLaunch", True)
    With btnLaunch
        .Caption = "Launch"
        .Width = 80
        .Height = 28
        .Left = (multiPage.Width - .Width) / 2
        .Top = lblWelcome.Top + lblWelcome.Height + 20
    End With

    ' === 7. Add Next and Back navigation buttons to the UserForm (not inside MultiPage) ===
    ' These buttons allow the user to move between wizard steps.
    Set btnBack = Me.Controls.Add("Forms.CommandButton.1", "btnBack", True)
    With btnBack
        .Caption = "Back"
        .Width = 60
        .Height = 24
        .Left = multiPage.Left
        .Top = multiPage.Top + multiPage.Height + 10
        .Visible = False ' Hide Back button on first page
    End With

    Set btnNext = Me.Controls.Add("Forms.CommandButton.1", "btnNext", True)
    With btnNext
        .Caption = "Next"
        .Width = 60
        .Height = 24
        .Left = multiPage.Left + multiPage.Width - .Width
        .Top = multiPage.Top + multiPage.Height + 10
        .Visible = True
    End With
End Sub



' -----------------------------------------------------------------------------
' btnNext_Click: Advances the wizard to the next page
' - Hides the current page and shows the next one
' - Updates the visibility of navigation buttons
' - Prevents advancing past the last page
' -----------------------------------------------------------------------------
Private Sub btnNext_Click()
    Dim curPage As Integer
    curPage = multiPage.Value ' Get the current page index
    If curPage < multiPage.Pages.Count - 1 Then
        multiPage.Pages(curPage).Visible = False ' Hide current page
        multiPage.Pages(curPage + 1).Visible = True ' Show next page
        multiPage.Value = curPage + 1 ' Update MultiPage to new page
    End If
    ' Update navigation button visibility
    btnBack.Visible = (multiPage.Value > 0)
    btnNext.Visible = (multiPage.Value < multiPage.Pages.Count - 1)
End Sub



' -----------------------------------------------------------------------------
' btnBack_Click: Moves the wizard to the previous page
' - Hides the current page and shows the previous one
' - Updates the visibility of navigation buttons
' - Prevents moving before the first page
' -----------------------------------------------------------------------------
Private Sub btnBack_Click()
    Dim curPage As Integer
    curPage = multiPage.Value ' Get the current page index
    If curPage > 0 Then
        multiPage.Pages(curPage).Visible = False ' Hide current page
        multiPage.Pages(curPage - 1).Visible = True ' Show previous page
        multiPage.Value = curPage - 1 ' Update MultiPage to new page
    End If
    ' Update navigation button visibility
    btnBack.Visible = (multiPage.Value > 0)
    btnNext.Visible = (multiPage.Value < multiPage.Pages.Count - 1)
End Sub

' Form Controls and Input Processing Status:
' 1. multiPage (MultiPage)         - Not Processed (container only)
' 2. lblWelcome (Label)            - Not Processed (display only)
' 3. btnLaunch (CommandButton)     - Not Processed (no click handler)
' 4. btnNext (CommandButton)       - Processed (navigation handled)
' 5. btnBack (CommandButton)       - Processed (navigation handled)
' 6. lblExample (Label)            - Not Processed (display only)
' 7. txtExample (TextBox)          - Not Processed (input not handled)
' 8. cmbExample (ComboBox)         - Not Processed (input not handled)
' 9. chkExample (CheckBox)         - Not Processed (input not handled)
'10. optExample1 (OptionButton)    - Not Processed (input not handled)
'11. optExample2 (OptionButton)    - Not Processed (input not handled)
'12. lstExample (ListBox)          - Not Processed (input not handled)
'13. btnExample (CommandButton)    - Not Processed (no click handler)

' ---------------------------------------------------------------------------
' Input Handlers for Tool Design Page Controls
' ---------------------------------------------------------------------------

' Handles changes in the txtExample TextBox
Private Sub txtExample_Change()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim txtExample As MSForms.TextBox
    Set txtExample = pageToolDesign.Controls("txtExample")
    ' Example: Show value in a message box (replace with your logic)
    ' MsgBox "TextBox changed: " & txtExample.Text
End Sub

' Handles selection changes in the cmbExample ComboBox
Private Sub cmbExample_Change()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim cmbExample As MSForms.ComboBox
    Set cmbExample = pageToolDesign.Controls("cmbExample")
    ' Example: Show selected item (replace with your logic)
    ' MsgBox "ComboBox selected: " & cmbExample.Value
End Sub

' Handles checking/unchecking of chkExample CheckBox
Private Sub chkExample_Click()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim chkExample As MSForms.CheckBox
    Set chkExample = pageToolDesign.Controls("chkExample")
    ' Example: Show checked state (replace with your logic)
    ' MsgBox "CheckBox checked: " & chkExample.Value
End Sub

' Handles selection of optExample1 OptionButton
Private Sub optExample1_Click()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim optExample1 As MSForms.OptionButton
    Set optExample1 = pageToolDesign.Controls("optExample1")
    ' Example: Show if selected (replace with your logic)
    ' MsgBox "Option 1 selected: " & optExample1.Value
End Sub

' Handles selection of optExample2 OptionButton
Private Sub optExample2_Click()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim optExample2 As MSForms.OptionButton
    Set optExample2 = pageToolDesign.Controls("optExample2")
    ' Example: Show if selected (replace with your logic)
    ' MsgBox "Option 2 selected: " & optExample2.Value
End Sub

' Handles selection changes in the lstExample ListBox
Private Sub lstExample_Click()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim lstExample As MSForms.ListBox
    Set lstExample = pageToolDesign.Controls("lstExample")
    ' Example: Show selected item (replace with your logic)
    ' If lstExample.ListIndex >= 0 Then
    '     MsgBox "ListBox selected: " & lstExample.List(lstExample.ListIndex)
    ' End If
End Sub

' Handles clicks on the btnExample CommandButton
Private Sub btnExample_Click()
    Dim pageToolDesign As MSForms.Page
    Set pageToolDesign = multiPage.Pages(1)
    Dim btnExample As MSForms.CommandButton
    Set btnExample = pageToolDesign.Controls("btnExample")
    ' Example: Show message (replace with your logic)
    ' MsgBox "Example Button clicked!"
End Sub
